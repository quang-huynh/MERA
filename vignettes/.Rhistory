extend = 'collection',
buttons = c('csv', 'excel', 'pdf'),
text = 'Download'
)),
dom = 'Blfrtip'
)
)%>%
formatStyle(columns = 4:ncol(Tab1), valueColumns = 4:ncol(Tab1), color = styleInterval(c(50,90),c('red','orange','green')))  %>%
formatStyle(columns=1, valueColumns=3, color = styleEqual(c("","M","D"),c("black","red","red")))%>%
formatStyle(columns=2, valueColumns=3, color = styleEqual(c("","M","D"),c("black","red","red")))%>%
formatStyle(columns=3, valueColumns=3, color = styleEqual(c("","M","D"),c("black","red","red")))
library(knitr)
library(rmarkdown)
setwd("C:/Github/MERA/vignettes")
setwd("C:/Users/tcarruth/Documents/Github/MERA/vignettes")
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
MSEobj=MSEobj2
MSEobj_reb=MSEobj_reb2
options=list(res=5,YIU=5,burnin=50)
rnd=1
nMPs<-MSEobj@nMPs
proyears<-MSEobj@proyears
burnin<-options$burnin
ind<-1+(0:1000*options$res)
ind<-ind[ind<=min(burnin,proyears)]
TRP<-round(apply(MSEobj@B_BMSY[,,1:burnin,drop=FALSE]>1,2:3,mean)*100,rnd)[,ind]
#FT<-FeaseLabs(MPs=MSEobj@MPs,dat=NA)
Tab1<-as.data.frame(cbind(MSEobj@MPs, FT$MP_Type, FT$feasible, TRP),stringsAsFactors = F)
for(i in 4:ncol(Tab1))Tab1[,i]<-as.numeric(Tab1[,i])
colnams<-c("MP","MP type","Feasibility",ind+Current_Year)
names(Tab1)<-colnams
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
FT
FT<-FeaseLabs(MPs=MSEobj@MPs,dat=NA)
FT
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
FT<-FeaseLabs(MPs=MSEobj2@MPs)
FT
MPcols<-FT$MPcols
MPcols
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
library(knitr)
library(rmarkdown)
setwd("C:/Github/MERA/vignettes")
setwd("C:/Users/tcarruth/Documents/Github/MERA/vignettes")
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
FeaseLabs(MPs=MSEobj2@MPs)
FeaseLabs
PanelState[[2]][[1]]
ny<-68
makeState<-function(x)rep(T,length(get(x)))
Fpanel_names<-c("M_list","D_list","h_list","FP_list","F_list","qh_list","q_list","LM_list","sel_list","dome_list","DR_list","PRM_list","sigR_list","Ah_list","Vh_list","A_list","V_list","Dh_list")
Mpanel_names<-c("M1_list","IB_list","IV_list","IBE_list","IVE_list","IBSL_list","IVSL_list")
Dpanel_names<-c("D1_list","CB_list","Beta_list","Err_list")
Slider_names<-c("loc","stmag","co")
MasterList<-list(Fpanel_names,Mpanel_names,Dpanel_names,Slider_names)
PanelState<-list(Fpanel=lapply(Fpanel_names, makeState),
Mpanel=lapply(Mpanel_names, makeState),
Dpanel=lapply(Dpanel_names, makeState),
Slider=lapply(Slider_names, makeState))
source("./R/MSC4vig.R")
tosource<-list.files("../inst/shiny_apps/MERA/Source/Questionnaire/",full.names = T)
for(i in 1:length(tosource))source(tosource[i]) # all fishery, management and data plots
source("./R/global4UG.R") # sources the list objects for the various questions
source("./R/Q_setup.R")
runApp('~/GitHub/MERA/inst/shiny_apps/MERA')
library(knitr)
library(rmarkdown)
setwd("C:/Github/MERA/vignettes")
setwd("C:/Users/tcarruth/Documents/Github/MERA/vignettes")
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
ny<-68
makeState<-function(x)rep(T,length(get(x)))
Fpanel_names<-c("M_list","D_list","h_list","FP_list","F_list","qh_list","q_list","LM_list","sel_list","dome_list","DR_list","PRM_list","sigR_list","Ah_list","Vh_list","A_list","V_list","Dh_list")
Mpanel_names<-c("M1_list","IB_list","IV_list","IBE_list","IVE_list","IBSL_list","IVSL_list")
Dpanel_names<-c("D1_list","CB_list","Beta_list","Err_list")
Slider_names<-c("loc","stmag","co")
MasterList<-list(Fpanel_names,Mpanel_names,Dpanel_names,Slider_names)
PanelState<-list(Fpanel=lapply(Fpanel_names, makeState),
Mpanel=lapply(Mpanel_names, makeState),
Dpanel=lapply(Dpanel_names, makeState),
Slider=lapply(Slider_names, makeState))
PanelState[[2]][[1]][c(3)]<-FALSE # no size limits allowed
PanelState[[2]][[1]][c(6,7,9)]<-FALSE # no comp or absolute biomass
PanelState[[2]][[1]]
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
MSC$Planning$Tabs[[1]](MSEobj2,MSEobj_reb2,options=list(res=5,YIU=5,burnin=50),rnd=1)
TabInd<-TabInd+1
MSC$Planning$Tabs[[2]](MSEobj=MSEobj2,MSEobj_reb=MSEobj_reb2,options=list(res=5,YIU=5,burnin=50),rnd=1)
TabInd<-TabInd+1
BMSYproj(MSEobj2,MSEobj_reb2,maxcol=4)
FigInd<-FigInd+1
BMSYproj(MSEobj2,MSEobj_reb2,maxcol=4)
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
BMSYproj(MSEobj2,MSEobj_reb2)
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
MSC$Planning$Figs[[5]](MSEobj_reb2,MSEobj_reb2)
CCU_plot<-function(MSEobj,MSEobj_reb,options=list(),maxrow=1,maxcol=5,fease=F){
if(fease){
MPcols=MPcols#FeaseLabs(MSEobj@MPs)$MPcols
}else{
MPcols<-rep('black',MSEobj@nMPs)
}
#          F2   F3           F4     F5      F6      F7        F8       F9      F10         F11        F12    F13    F14       F15      F16      F17     F18      F19
opt1<-  c("M",  "D", "hs",  "Ftype","Esd",  "qhssim", "qinc",  "L50",  "Sel50sim", "Vmaxlen", "DR",  "Fdisc", "procsd", "Ahsim", "Vhsim", "Asim", "Vsim", "initD",
"TACFrac", "TACSD", "TAEFrac","TAESD", "SizeLimFrac","SizeLimSD","Cbias","betas","RefY")
MSEtemp<-MSEobj
if(length(MSEtemp@Misc)<4)MSEtemp@Misc[[4]]<-NULL
MSEtemp@OM<-cbind(MSEtemp@OM,betas=MSEtemp@Obs$betas,MSEtemp@Misc[[4]])
MSEtemp@OM<-MSEtemp@OM[,names(MSEtemp@OM)%in%opt1]
VOIout<-VOI(MSEtemp,ncomp=15,nbins=6,plot=F)[[1]]
qno<-   c("F2",       "F3",             "F4",       "F5",            "F6",         "F7",               "F8",                  "F9",                "F10",        "F11",      "F12",        "F13",              "F14",      "F15",            "F16",         "F17",         "F18",           "F19",
"M2",       "M3",          "M4",         "M5",     "M6",               "M7", "D2",    "D3")
qtext<- c("Longevity","Stock depletion","Steepness","Effort Pattern","Effort Var.","Hist. catchability","Future catchability","Length at Maturity","Selectivity","Dome Sel.","Discard rate","Post. Rel. Mort.","Rec. Var.","Hist. MPA size", "Hist. Mixing", "Future MPA", "Future Mixing", "Initial Dep.",
"TAC offset", "TAC Var.", "TAE offset", "TAE Var", "Size Lim. offset", "Size Lim. Var.", "Cat. Rep. Bias.","Hyperstability")
nMPs<-MSEobj@nMPs
nrow=ceiling(nMPs/maxcol)
par(mfrow=c(max(maxrow,nrow),maxcol),mai=c(2.4,0.4,0.2,0.01),omi=c(0.3,0.3,0.05,0.01))
for(i in 1:MSEobj@nMPs){
MP<-MSEobj@MPs[i]
dat<-VOIout[match(MP,VOIout[,1])+0:1,2:16]
lab1<-qno[match(as.factor(unlist(dat[1,])),opt1)]
dat2<-aggregate(as.numeric(as.character(unlist(dat[2,]))),by=list(lab1),max)
dat2<-dat2[order(dat2$x,decreasing=T),]
labs<-paste(qno,qtext,sep=" - ")
barplot(dat2[,2],names.arg=labs[match(dat2[,1],qno)], las=2,col=rgb(0.4,0.8,0.95),border=NA,cex.axis=1.4,cex.names=1.3)
mtext(MP,3,adj=0.8,font=2,cex=1,col=MPcols[i])
}
mtext("Question / operating model characteristic",1,outer=T,line=0.5)
mtext("Variability in Long Term Yield (% LTY)",2,outer=T,line=0.5)
}
MSC$Planning$Figs[[5]](MSEobj_reb2,MSEobj_reb2)
if(fease){
MPcols=MPcols#FeaseLabs(MSEobj@MPs)$MPcols
}else{
MPcols<-rep('black',MSEobj@nMPs)
}
#          F2   F3           F4     F5      F6      F7        F8       F9      F10         F11        F12    F13    F14       F15      F16      F17     F18      F19
opt1<-  c("M",  "D", "hs",  "Ftype","Esd",  "qhssim", "qinc",  "L50",  "Sel50sim", "Vmaxlen", "DR",  "Fdisc", "procsd", "Ahsim", "Vhsim", "Asim", "Vsim", "initD",
"TACFrac", "TACSD", "TAEFrac","TAESD", "SizeLimFrac","SizeLimSD","Cbias","betas","RefY")
MSEtemp<-MSEobj
if(length(MSEtemp@Misc)<4)MSEtemp@Misc[[4]]<-NULL
MSEtemp@OM<-cbind(MSEtemp@OM,betas=MSEtemp@Obs$betas,MSEtemp@Misc[[4]])
MSEtemp@OM<-MSEtemp@OM[,names(MSEtemp@OM)%in%opt1]
VOIout<-VOI(MSEtemp,ncomp=15,nbins=6,plot=F)[[1]]
qno<-   c("F2",       "F3",             "F4",       "F5",            "F6",         "F7",               "F8",                  "F9",                "F10",        "F11",      "F12",        "F13",              "F14",      "F15",            "F16",         "F17",         "F18",           "F19",
"M2",       "M3",          "M4",         "M5",     "M6",               "M7", "D2",    "D3")
qtext<- c("Longevity","Stock depletion","Steepness","Effort Pattern","Effort Var.","Hist. catchability","Future catchability","Length at Maturity","Selectivity","Dome Sel.","Discard rate","Post. Rel. Mort.","Rec. Var.","Hist. MPA size", "Hist. Mixing", "Future MPA", "Future Mixing", "Initial Dep.",
"TAC offset", "TAC Var.", "TAE offset", "TAE Var", "Size Lim. offset", "Size Lim. Var.", "Cat. Rep. Bias.","Hyperstability")
nMPs<-MSEobj@nMPs
nrow=ceiling(nMPs/maxcol)
nrow
maxrow=1
maxcol=5
fease=F
if(fease){
MPcols=MPcols#FeaseLabs(MSEobj@MPs)$MPcols
}else{
MPcols<-rep('black',MSEobj@nMPs)
}
#          F2   F3           F4     F5      F6      F7        F8       F9      F10         F11        F12    F13    F14       F15      F16      F17     F18      F19
opt1<-  c("M",  "D", "hs",  "Ftype","Esd",  "qhssim", "qinc",  "L50",  "Sel50sim", "Vmaxlen", "DR",  "Fdisc", "procsd", "Ahsim", "Vhsim", "Asim", "Vsim", "initD",
"TACFrac", "TACSD", "TAEFrac","TAESD", "SizeLimFrac","SizeLimSD","Cbias","betas","RefY")
MSEtemp<-MSEobj
if(length(MSEtemp@Misc)<4)MSEtemp@Misc[[4]]<-NULL
MSEtemp@OM<-cbind(MSEtemp@OM,betas=MSEtemp@Obs$betas,MSEtemp@Misc[[4]])
MSEtemp@OM<-MSEtemp@OM[,names(MSEtemp@OM)%in%opt1]
VOIout<-VOI(MSEtemp,ncomp=15,nbins=6,plot=F)[[1]]
MSEtemp<-MSEobj2
if(length(MSEtemp@Misc)<4)MSEtemp@Misc[[4]]<-NULL
MSEtemp@OM<-cbind(MSEtemp@OM,betas=MSEtemp@Obs$betas,MSEtemp@Misc[[4]])
MSEtemp@OM<-MSEtemp@OM[,names(MSEtemp@OM)%in%opt1]
VOIout<-VOI(MSEtemp,ncomp=15,nbins=6,plot=F)[[1]]
qno<-   c("F2",       "F3",             "F4",       "F5",            "F6",         "F7",               "F8",                  "F9",                "F10",        "F11",      "F12",        "F13",              "F14",      "F15",            "F16",         "F17",         "F18",           "F19",
"M2",       "M3",          "M4",         "M5",     "M6",               "M7", "D2",    "D3")
qtext<- c("Longevity","Stock depletion","Steepness","Effort Pattern","Effort Var.","Hist. catchability","Future catchability","Length at Maturity","Selectivity","Dome Sel.","Discard rate","Post. Rel. Mort.","Rec. Var.","Hist. MPA size", "Hist. Mixing", "Future MPA", "Future Mixing", "Initial Dep.",
"TAC offset", "TAC Var.", "TAE offset", "TAE Var", "Size Lim. offset", "Size Lim. Var.", "Cat. Rep. Bias.","Hyperstability")
nMPs<-MSEobj@nMPs
nrow=ceiling(nMPs/maxcol)
nrow
nMPs
maxcol
MSEobj2@nMPs
MSEobj<-MSEobj2
if(fease){
MPcols=MPcols#FeaseLabs(MSEobj@MPs)$MPcols
}else{
MPcols<-rep('black',MSEobj@nMPs)
}
#          F2   F3           F4     F5      F6      F7        F8       F9      F10         F11        F12    F13    F14       F15      F16      F17     F18      F19
opt1<-  c("M",  "D", "hs",  "Ftype","Esd",  "qhssim", "qinc",  "L50",  "Sel50sim", "Vmaxlen", "DR",  "Fdisc", "procsd", "Ahsim", "Vhsim", "Asim", "Vsim", "initD",
"TACFrac", "TACSD", "TAEFrac","TAESD", "SizeLimFrac","SizeLimSD","Cbias","betas","RefY")
MSEtemp<-MSEobj
if(length(MSEtemp@Misc)<4)MSEtemp@Misc[[4]]<-NULL
MSEtemp@OM<-cbind(MSEtemp@OM,betas=MSEtemp@Obs$betas,MSEtemp@Misc[[4]])
MSEtemp@OM<-MSEtemp@OM[,names(MSEtemp@OM)%in%opt1]
VOIout<-VOI(MSEtemp,ncomp=15,nbins=6,plot=F)[[1]]
qno<-   c("F2",       "F3",             "F4",       "F5",            "F6",         "F7",               "F8",                  "F9",                "F10",        "F11",      "F12",        "F13",              "F14",      "F15",            "F16",         "F17",         "F18",           "F19",
"M2",       "M3",          "M4",         "M5",     "M6",               "M7", "D2",    "D3")
qtext<- c("Longevity","Stock depletion","Steepness","Effort Pattern","Effort Var.","Hist. catchability","Future catchability","Length at Maturity","Selectivity","Dome Sel.","Discard rate","Post. Rel. Mort.","Rec. Var.","Hist. MPA size", "Hist. Mixing", "Future MPA", "Future Mixing", "Initial Dep.",
"TAC offset", "TAC Var.", "TAE offset", "TAE Var", "Size Lim. offset", "Size Lim. Var.", "Cat. Rep. Bias.","Hyperstability")
nMPs<-MSEobj@nMPs
nrow=ceiling(nMPs/maxcol)
nrow
maxcol
nMPs
par(mfrow=c(max(maxrow,nrow),maxcol),mai=c(2.4,0.4,0.2,0.01),omi=c(0.3,0.3,0.05,0.01))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
runApp('~/GitHub/MERA/inst/shiny_apps/MERA')
styr=2015
PPD<-MSEobj@Misc$Data[[1]]
styr=2015
PPD<-MSEobj@Misc$Data[[1]]
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
dim(PPD@Cat)
styr=140
PPD<-MSEobj@Misc$Data[[1]]
# Standardization
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD@Ind<-PPD@Ind/PPD@Ind[,styr]
PPD@ML<-PPD@ML/PPD@ML[,styr]
tsd= c("Cat","Cat","Cat","Ind","Ind","ML")
stat=c("slp","AAV","mu","slp","mu", "slp")
res<-max(dat_ind@Year-max(dat@Year))
datayears<-dim(dat_ind@Cat)[2]
indPPD<-getinds(PPD,styr=styr,res=res,tsd=tsd,stat=stat)
styr=140
PPD<-MSEobj@Misc$Data[[1]]
# Standardization
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD@Ind<-PPD@Ind/PPD@Ind[,styr]
PPD@ML<-PPD@ML/PPD@ML[,styr]
tsd= c("Cat","Cat","Cat","Ind","Ind","ML")
stat=c("slp","AAV","mu","slp","mu", "slp")
datayears<-dim(dat_ind@Cat)[2]
indPPD<-getinds(PPD,styr=styr,res=5,tsd=tsd,stat=stat)
nsim<-dim(PPD@Cat)[1]
nsim
proyears<-dim(PPD@Cat)[2]-styr+1
proyears
if(res>proyears)message(paste0("The temporal resolution for posterior predictive data calculation (",res,") is higher than the number of projected years (",proyears,"). Only one time step of indicators are calculated for ",proyears, " projected years."))
np<-1#floor(proyears/res)
np
ntsd<-length(tsd)
inds<-array(NA,c(ntsd,1,nsim))
ntsd
inds
inds<-array(NA,c(ntsd,1,nsim))
for(i in 1:ntsd){
for(pp in 1:np){
ind<-(styr+((pp-1)*res)+1:res)-1
inds[i,pp,]<-sapply(1:nsim,get(stat[i]),mat=slot(PPD,tsd[i]),ind=ind)
}
}
source('~/GitHub/MERA/inst/shiny_apps/MERA/Source/AI/AI_results.R', echo=TRUE)
nsim<-dim(PPD@Cat)[1]
proyears<-dim(PPD@Cat)[2]-styr+1
if(res>proyears)message(paste0("The temporal resolution for posterior predictive data calculation (",res,") is higher than the number of projected years (",proyears,"). Only one time step of indicators are calculated for ",proyears, " projected years."))
np<-1#floor(proyears/res)
ntsd<-length(tsd)
inds<-array(NA,c(ntsd,1,nsim))
for(i in 1:ntsd){
for(pp in 1:np){
ind<-(styr+((pp-1)*res)+1:res)-1
inds[i,pp,]<-sapply(1:nsim,get(stat[i]),mat=slot(PPD,tsd[i]),ind=ind)
}
}
inds
styr=140
PPD<-MSEobj@Misc$Data[[1]]
# Standardization
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD@Ind<-PPD@Ind/PPD@Ind[,styr]
PPD@ML<-PPD@ML/PPD@ML[,styr]
tsd= c("Cat","Cat","Cat","Ind","Ind","ML")
stat=c("slp","AAV","mu","slp","mu", "slp")
datayears<-dim(dat_ind@Cat)[2]
indPPD<-getinds(PPD,styr=styr,res=5,tsd=tsd,stat=stat)
# Standardization
dat_ind@Cat<-dat_ind@Cat/dat_ind@Cat[,styr]
dat_ind@Ind<-dat_ind@Ind/dat_ind@Ind[,styr]
dat_ind@ML<-dat_ind@ML/dat_ind@ML[,styr]
indData<-getinds(dat_ind,styr=styr,res=res,tsd=tsd,stat=stat)
CC(indPPD,indData,pp=1,res=res)
styr
dim(PPD@Cat)
styr=140
PPD<-MSEobj@Misc$Data[[1]]
# Standardization
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD@Ind<-PPD@Ind/PPD@Ind[,styr]
PPD@ML<-PPD@ML/PPD@ML[,styr]
tsd= c("Cat","Cat","Cat","Ind","Ind","ML")
stat=c("slp","AAV","mu","slp","mu", "slp")
datayears<-dim(dat_ind@Cat)[2]
indPPD<-getinds(PPD,styr=styr,res=5,tsd=tsd,stat=stat)
dat_ind@Cat<-dat_ind@Cat/dat_ind@Cat[,styr]
dat_ind@Cat[,styr]
indPPD<-dat_ind<-getinds(PPD,styr=styr,res=5,tsd=tsd,stat=stat)
# Standardization
dat_ind@Cat<-dat_ind@Cat/dat_ind@Cat[,styr]
dim(indPPD@Cat)
styr=140
PPD<-MSEobj@Misc$Data[[1]]
# Standardization
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD@Ind<-PPD@Ind/PPD@Ind[,styr]
PPD@ML<-PPD@ML/PPD@ML[,styr]
tsd= c("Cat","Cat","Cat","Ind","Ind","ML")
stat=c("slp","AAV","mu","slp","mu", "slp")
datayears<-dim(dat_ind@Cat)[2]
styr=140
PPD<-MSEobj@Misc$Data[[1]]
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD@Ind<-PPD@Ind/PPD@Ind[,styr]
PPD@ML<-PPD@ML/PPD@ML[,styr]
tsd= c("Cat","Cat","Cat","Ind","Ind","ML")
stat=c("slp","AAV","mu","slp","mu", "slp")
datayears<-dim(dat_ind@Cat)[2]
datayears
styr=140
PPD<-MSEobj@Misc$Data[[1]]
# Standardization
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD@Ind<-PPD@Ind/PPD@Ind[,styr]
PPD@ML<-PPD@ML/PPD@ML[,styr]
tsd= c("Cat","Cat","Cat","Ind","Ind","ML")
stat=c("slp","AAV","mu","slp","mu", "slp")
getinds(PPD,styr=styr,res=5,tsd=tsd,stat=stat)
indPPD<-indData<-getinds(PPD,styr=styr,res=5,tsd=tsd,stat=stat)
CC(indPPD,indData,pp=1,res=res)
plot_mdist(indPPD,indData,alpha=0.05)
styr=140
PPD<-MSEobj@Misc$Data[[1]]
# Standardization
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD@Ind<-PPD@Ind/PPD@Ind[,styr]
PPD@ML<-PPD@ML/PPD@ML[,styr]
tsd= c("Cat","Cat","Cat","Ind","Ind","ML")
stat=c("slp","AAV","mu","slp","mu", "slp")
indPPD<-indData<-getinds(PPD,styr=styr,res=5,tsd=tsd,stat=stat)
CC(indPPD,indData,pp=1,res=res)
plot_mdist(indPPD,indData,alpha=0.05)
plot_mdist(indPPD,indData,alpha=0.05)
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
styr=140
PPD<-MSEobj2@Misc$Data[[1]]
# Standardization
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD<-MSEobj2@Misc$Data[[1]]
dim(PPD@Cat)
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
MPs<-avail('MP')
URLs <- sapply(MPs, MPurl) %>% unlist()
MPs<-avail('MP')
URLs <- sapply(MPs, MPurl) %>% unlist()
MPwithurl <- !is.na(URLs)
MPs[MPwithurl] <- paste0("<a href='", URLs[MPwithurl]," ' target='_blank'>", MPs[MPwithurl],"</a>")
MPs<-avail('MP')
dat<-data.frame(MPs=MPs)
URLs <- sapply(MPs, MPurl) %>% unlist()
MPwithurl <- !is.na(URLs)
dat$MPs[MPwithurl] <- paste0("<a href='", URLs[MPwithurl]," ' target='_blank'>", MPs[MPwithurl],"</a>")
MPwithurl
MPs<-avail('MP')
dat<-data.frame(MPs=MPs)
URLs <- sapply(MPs, MPurl) %>% unlist()
MPwithurl <- !is.na(URLs)
MPwithurl
dat<-dat[MPwithurl,]
MPs<-MPs[MPwithurl]
MPs<-avail('MP')
dat<-data.frame(MPs=MPs)
URLs <- sapply(MPs, MPurl) %>% unlist()
MPwithurl <- !is.na(URLs)
dat<-dat[MPwithurl,]
dat$MPs <- paste0("<a href='", URLs[MPwithurl]," ' target='_blank'>", MPs[MPwithurl],"</a>")
URLs[MPwithurl]
MPs[MPwithurl]
paste0("<a href='", URLs[MPwithurl]," ' target='_blank'>", MPs[MPwithurl],"</a>")
MPs<-avail('MP')
dat<-data.frame(MPs=MPs)
URLs <- sapply(MPs, MPurl) %>% unlist()
MPwithurl <- !is.na(URLs)
dat<-dat[MPwithurl,]
dat$MPs <- paste0("<a href='", URLs[MPwithurl]," ' target='_blank'>", MPs[MPwithurl],"</a>")
dat$MPs
MPs<-avail('MP')
dat<-data.frame(MPs=MPs)
URLs <- sapply(MPs, MPurl) %>% unlist()
MPwithurl <- !is.na(URLs)
MPs <- paste0("<a href='", URLs[MPwithurl]," ' target='_blank'>", MPs[MPwithurl],"</a>")
MPs
length(dat$MPs)
matrix(dat$MPs,ncol=10)
matrix(MPs,ncol=10)
dat<-as.data.frame(matrix(MPs,ncol=10))
dat
data.frame(matrix(MPs,ncol=10))
MPs<-avail('MP')
MPs<-avail('MP')
dat<-data.frame(MPs=MPs)
URLs <- sapply(MPs, MPurl) %>% unlist()
MPwithurl <- !is.na(URLs)
MPs <- paste0("<a href='", URLs[MPwithurl]," ' target='_blank'>", MPs[MPwithurl],"</a>")
MPs<-avail('MP')
dat<-data.frame(MPs=MPs)
URLs <- sapply(MPs, MPurl) %>% unlist()
MPwithurl <- !is.na(URLs)
MPs <- paste0("<a href='", URLs[MPwithurl]," ' target='_blank'>", MPs[MPwithurl],"</a>")
mat<-matrix(MPs,ncol=8)
mat
mat<-matrix(MPs,ncol=8)
MPs <- paste0("<a href='", URLs[MPwithurl]," ' target='_blank'>", MPs[MPwithurl],"</a>")
ncol<-8
nrow<-ceiling(length(MPs)/ncol)
nrow
MPs<-avail('MP')
dat<-data.frame(MPs=MPs)
URLs <- sapply(MPs, MPurl) %>% unlist()
MPwithurl <- !is.na(URLs)
MPs <- paste0("<a href='", URLs[MPwithurl]," ' target='_blank'>", MPs[MPwithurl],"</a>")
ncol<-8
nrow<-ceiling(length(MPs)/ncol)
MPs<-c(MPs,rep("",length(MPs)-(nrow*ncol)))
length(MPs)
MPs<-avail('MP')
dat<-data.frame(MPs=MPs)
URLs <- sapply(MPs, MPurl) %>% unlist()
MPwithurl <- !is.na(URLs)
MPs <- paste0("<a href='", URLs[MPwithurl]," ' target='_blank'>", MPs[MPwithurl],"</a>")
ncol<-8
nrow<-ceiling(length(MPs)/ncol)
MPs<-c(MPs,rep("",(nrow*ncol)-length(MPs)))
MPs
mat<-matrix(MPs,ncol=8)
dat<-as.data.frame(mat)
dat
dat<-data.frame(mat)
dat
mat
caption=paste0("MP table" )
datatable(mat,caption=caption, class = 'display',rownames=FALSE,escape=FALSE,
options=list(dom = 'Brti',
ordering=F
)
)
colnams(mat)<-rep("",ncol)
colnames(mat)<-rep("",ncol)
caption=paste0("Links to MPs" )
datatable(mat,caption=caption, class = 'display',rownames=FALSE,escape=FALSE,
options=list(dom = 'Brti',
ordering=F
)
)
MPs<-avail('MP')
dat<-data.frame(MPs=MPs)
URLs <- sapply(MPs, MPurl) %>% unlist()
MPwithurl <- !is.na(URLs)
MPs <- paste0("<a href='", URLs[MPwithurl]," ' target='_blank'>", MPs[MPwithurl],"</a>")
ncol<-8
nrow<-ceiling(length(MPs)/ncol)
MPs<-c(MPs,rep("",(nrow*ncol)-length(MPs)))
mat<-matrix(MPs,ncol=8)
colnames(mat)<-rep("",ncol)
dat<-data.frame(mat)
caption=paste0("Links to MPs" )
datatable(mat,caption=caption, class = 'display',rownames=FALSE,escape=FALSE,
options=list(dom = 'Brti',
ordering=F
)
)
MPs<-avail('MP')
dat<-data.frame(MPs=MPs)
URLs <- sapply(MPs, MPurl) %>% unlist()
MPwithurl <- !is.na(URLs)
MPs <- paste0("<a href='", URLs[MPwithurl]," ' target='_blank'>", MPs[MPwithurl],"</a>")
ncol<-8
nrow<-ceiling(length(MPs)/ncol)
MPs<-c(MPs,rep("",(nrow*ncol)-length(MPs)))
mat<-matrix(MPs,ncol=8)
colnames(mat)<-rep(" ",ncol)
dat<-data.frame(mat)
caption=paste0("Links to MPs" )
datatable(mat,caption=caption, class = 'display',rownames=FALSE,escape=FALSE,
options=list(dom = 'Brti',
ordering=F
)
)
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
datatable(mat,caption=caption, class = 'display',rownames=FALSE,escape=FALSE)
runApp('~/GitHub/MERA/inst/shiny_apps/MERA')
render(input=paste0(getwd(),"/MERA.Rmd"), output_file=paste("MERA_User_Guide_4_4.html",sep=""))
