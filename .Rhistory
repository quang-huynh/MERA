# Proper Data Feasibility based on complex fease analysis by MP
tempdat<-tempdat0<-DLMtool::SimulatedData
tempdat@Cat<-array(NA,dim(tempdat0@Cat))
tempdat@Ind<-array(NA,dim(tempdat0@Ind))
tempdat@CAL<-array(NA,dim(tempdat0@CAL))
tempdat@CAA<-array(NA,dim(tempdat0@CAA))
tempdat@vbK<-rep(NA,length(tempdat0@vbK))
tempdat@Abun<-rep(NA,length(tempdat0@Abun))
ndaty<-dim(tempdat@Cat)[2]
cond<-unlist(PanelState[[3]][1]) # cond=rep(T,9) cond=c(T,T,F,T,T,F,T,T,T)
FeasePos<-c("Catch","Catch","Index","Index","Index","Catch_at_length","Catch_at_age","Growth","Abundance")
Datslot<-c("Cat","Cat","Ind",  "Ind","Ind","CAL","CAA","vbK","Abun")
yrrange<-c(ndaty, 5,    ndaty,  5,    ndaty,        2,                2, NA, NA)
for(i in 1:length(Datslot)){
if(cond[i]){ # if user has specified that data are available
if(!is.na(yrrange[i])){ # it not a vector of values
ndim<-length(dim(slot(tempdat0,Datslot[i])))
if(ndim==2){ # is a matrix
slot(tempdat,Datslot[i])[,ndaty-(yrrange[i]:1)+1]<-slot(tempdat0,Datslot[i])[,ndaty-(yrrange[i]:1)+1]
}else{ # is a 3D array
slot(tempdat,Datslot[i])[,ndaty-(yrrange[i]:1)+1,]<-slot(tempdat0,Datslot[i])[,ndaty-(yrrange[i]:1)+1,]
}
}else{
slot(tempdat,Datslot[i])<-slot(tempdat0,Datslot[i])
}
}
}
if(!cond[3])tempdat@Dep<-rep(NA,2)
if(!is.na(dat)){
DFeasible<-RealFease(dat)
}else{
DFeasible<-Fease(tempdat,msg=F)
}
# TAC TAE Feasibility
cond<-unlist(PanelState[[2]][1]) # cond=rep(T,4) cond=c(F,T,T,T)
runMPs <- applyMP(tempdat0, MPs, reps = 2, nsims=1, silent=TRUE)
recs <- runMPs[[1]]
type <- matrix(0, nrow=length(MPs),ncol=4) # TAC TAE SL MPA
for (mm in seq_along(recs)) {
type[mm,1] <- as.integer(length(recs[[mm]]$TAC) > 0)
type[mm,2] <- as.integer(length(recs[[mm]]$Effort)>0)
type[mm,3] <- as.integer(length(recs[[mm]]$LR5)>0)
type[mm,4] <- as.integer(!is.na(recs[[mm]]$Spatial[1,1]))
}
DFeasible<-unique(c(DFeasible,MPs[(type[,4]==1|type[,3]==1) & apply(type,1,sum)==1])) # Size limits and area closures might not need data
totneeded<-apply(type,1,sum)
speced<-matrix(rep(as.integer(cond),each=length(MPs)),nrow=length(MPs))
MFeasible<-MPs[apply(speced*type,1,sum)==totneeded]
MP_Type<-rep("TAC",length(MPs))
MP_Type[type[,2]==1]<-"TAE"
MP_Type[type[,3]==1]<-"SzLim"
MP_Type[type[,4]==1]<-"MPA"
MP_Type[totneeded>1]<-"Mixed"
cols<-rep('black',length(MPs))
#cols[!MPs%in%MFeasible & !MPs%in%DFeasible]<-'purple'
#cols[!MPs%in%MFeasible & MPs%in%DFeasible]<-'red'
cols[!MPs%in%MFeasible | !MPs%in%DFeasible]<-'red'
feasible<-rep("",length(MPs))
condD<-!MPs%in%DFeasible
condM<-!MPs%in%MFeasible
condDM<-condD&condM
feasible[condD]<-"D"
feasible[condM]<-"M"
feasible[condDM]<-"D/M"
# Rankings
#rnkscore<-Ptab2$LTY
rnkscore<-rep(0,nMPs)
# rnkscore[cols=="green"]=rnkscore[cols=="green"]+2000
rnkscore[cols=="red"]=rnkscore[cols=="red"]+1000
ord<-order(rnkscore,decreasing = T)
list(feasible=feasible,MPcols=cols,MPs=MPs,MP_Type=MP_Type,ord=ord)
}
# ============= Risk Assessment ==================
Tabs <- Figs <- Tab_title <- Tab_text <- Fig_title <- Fig_text <- Fig_dim <- options <- Intro_title <- Intro_text <- new('list')
# These are the names of widgets and their values to display in this skin / mode
#             years in projection,  year resolution of reporting  rounding of digits
options<-list(res=5)
Intro_title[[1]] <- "Introduction"
Intro_text[[1]] <- "Status quo fishing effort and catches are projected to evaluate biological risk. Zero catch and FMSY fishing are also projected to frame performance."
# --- Tables ---
Tab_title[[1]] <- "Table 1. Projected biomass relative 50% BMSY"
Tab_text[[1]] <-"The probability that projected biomass exceeds 50% BMSY. "
Tabs[[1]]<-function(MSEobj,MSEobj_reb,options=list(res=5),rnd=1){
nMPs<-MSEobj@nMPs
proyears<-MSEobj@proyears
ind<-1+(0:1000*options$res)
ind<-ind[ind<=proyears]
LRP<-round(apply(MSEobj@B_BMSY>0.5,2:3,mean)*100,rnd)[,ind]
Tab1<-as.data.frame(cbind(c("Current effort", "Current catches", "FMSY fishing", "Zero fishing"),LRP),stringsAsFactors = F)
for(i in 2:ncol(Tab1))Tab1[,i]<-as.numeric(Tab1[,i])
colnams<-c("MP",ind+Current_Year)
names(Tab1)<-colnams
Bdeps<-MSEobj@OM$D/MSEobj@OM$SSBMSY_SSB0 #MSEobj_reb@B_BMSY[,1,1]#
caption=paste0("Starting between ",round(min(Bdeps)*100,0), "% and ", round(max(Bdeps)*100,0), "% BMSY" )
datatable(Tab1,caption=caption, options=list(dom='t'))%>%
formatStyle(columns = 2:ncol(Tab1), valueColumns = 2:ncol(Tab1), color = styleInterval(c(50,100),c('red','orange','green')))
}
Tab_title[[2]] <- "Table 2. Projected biomass relative to BMSY"
Tab_text[[2]] <-"The probability that projected biomass is above BMSY. "
Tabs[[2]]<-function(MSEobj,MSEobj_reb,options=list(res=5),rnd=1){
nMPs<-MSEobj@nMPs
proyears<-MSEobj@proyears
ind<-1+(0:1000*options$res)
ind<-ind[ind<=proyears]
TRP<-round(apply(MSEobj@B_BMSY>1,2:3,mean)*100,rnd)[,ind]
Tab1<-as.data.frame(cbind(c("Current effort", "Current catches", "FMSY fishing", "Zero fishing"),TRP),stringsAsFactors = F)
for(i in 2:ncol(Tab1)) Tab1[,i]<-as.numeric(Tab1[,i])
colnams<-c("MP",ind+Current_Year)
names(Tab1)<-colnams
Bdeps<-MSEobj@OM$D/MSEobj@OM$SSBMSY_SSB0 #MSEobj_reb@B_BMSY[,1,1]#
caption=paste0("Starting between ",round(min(Bdeps)*100,0), "% and ", round(max(Bdeps)*100,0), "% BMSY" )
datatable(Tab1,caption=caption,options=list(dom='t'))%>%
formatStyle(columns = 2:ncol(Tab1), valueColumns = 2:ncol(Tab1), color = styleInterval(c(50,100),c('red','orange','green')))
}
#Tab_title[[3]] <- Tab_title[[4]] <- Tab_title[[5]] <- Tab_title[[6]] <- Tab_title[[7]] <- Tab_title[[8]] <- Tab_title[[9]] <- "" # make extras empty
Fig_title[[2]] <- "Figure 1. Risk Assessment. B/BMSY and Yield (relative to today) projection plots"
Fig_text[[2]] <-  "Figure 1. Risk assessment text. Projections of biomass and yield relative to MSY levels. The blue regions represent the 90% and 50% probability intervals, the white solid line is the median and the dark blue lines are two example simulations. Grey horizontal lines denote the target and limit reference points."
Figs[[2]]<-function(MSEobj,MSEobj_reb,options=list()){
MSEobj@MPs<-c("Current effort", "Current catches", "FMSY fishing", "Zero fishing")
BMSYproj(MSEobj,MSEobj_reb,options,maxcol=4)
}
Fig_dim[[2]]<-function(dims)list(height=400,width=1200)
Fig_title[[1]] <- ""#<- Fig_title[[3]] <- Fig_title[[4]] <- Fig_title[[5]]<- Fig_title[[7]] <- Fig_title[[8]] <- Fig_title[[9]] <- "" # make extras empty
Risk_Assessment<-list(Tabs=Tabs, Figs=Figs, Tab_title=Tab_title, Tab_text=Tab_text, Fig_title=Fig_title,
Fig_text=Fig_text, Fig_dim=Fig_dim, Intro_title=Intro_title, Intro_text=Intro_text, options=options)
# ============= Planning =========================
Tabs <- Figs <- Tab_title <- Tab_text <- Fig_title <- Fig_text <- Fig_dim <- options <- Intro_title <- Intro_text <- new('list')
# These are the names of widgets and their values to display in this skin / mode
#             years in projection,  year resolution of reporting  rounding of digits
options<-list(burnin=10,            res=1)
Intro_title[[1]] <- "Introduction"
Intro_text[[1]] <- "Planning mode projects multiple MPs to evaluate their absolute and relative performance with respect to target and limit reference points."
# --- Tables ---
Tab_title[[1]] <- "Table 1. Projected biomass relative to the LRP"
Tab_text[[1]] <-"The probability that projected biomass is above 50% BMSY. Probabilities of 50% or lower are shaded red. Probabilities over 90% are shaded green. "
Tabs[[1]]<-function(MSEobj,MSEobj_reb,options=list(res=1),rnd=1){
nMPs<-MSEobj@nMPs
proyears<-MSEobj@proyears
burnin<-options$burnin
ind<-1+(0:1000*options$res)
ind<-ind[ind<=min(burnin,proyears)]
LRP<-round(apply(MSEobj@B_BMSY[,,1:burnin,drop=FALSE]>0.5,2:3,mean)*100,rnd)[,ind]
FT<<-FeaseLabs(MPs=MSEobj@MPs,dat=NA)
MPcols<<-FT$MPcols  # just do FeaseLabs once or else this computationally costly code has to be reused
Tab1<-as.data.frame(cbind(MSEobj@MPs, FT$MP_Type, FT$feasible, LRP),stringsAsFactors = F)
for(i in 4:ncol(Tab1))Tab1[,i]<-as.numeric(Tab1[,i])
colnams<-c("MP","MP type","Feasibility",ind+Current_Year)
names(Tab1)<-colnams
Bdeps<-MSEobj@OM$D/MSEobj@OM$SSBMSY_SSB0 #MSEobj_reb@B_BMSY[,1,1]#
caption=paste0("Starting between ",round(min(Bdeps)*100,0), "% and ", round(max(Bdeps)*100,0), "% BMSY" )
datatable(Tab1,caption=caption) %>%
formatStyle(columns = 4:ncol(Tab1), valueColumns = 4:ncol(Tab1), color = styleInterval(c(50,90),c('red','orange','green')))  %>%
formatStyle(columns=1, valueColumns=3, color = styleEqual(c("","M","D"),c("black","red","red"))) %>%
formatStyle(columns=2, valueColumns=3, color = styleEqual(c("","M","D"),c("black","red","red")))%>%
formatStyle(columns=3, valueColumns=3, color = styleEqual(c("","M","D"),c("black","red","red")))
}
Tab_title[[2]] <- "Table 2. Projected biomass relative to the TRP"
Tab_text[[2]] <-"The probability that projected biomass is above BMSY"
Tabs[[2]]<-function(MSEobj,MSEobj_reb,options=list(res=1),rnd=1){
nMPs<-MSEobj@nMPs
proyears<-MSEobj@proyears
burnin<-options$burnin
ind<-1+(0:1000*options$res)
ind<-ind[ind<=min(burnin,proyears)]
TRP<-round(apply(MSEobj@B_BMSY[,,1:burnin,drop=FALSE]>1,2:3,mean)*100,rnd)[,ind]
#FT<-FeaseLabs(MPs=MSEobj@MPs,dat=NA)
Tab1<-as.data.frame(cbind(MSEobj@MPs, FT$MP_Type, FT$feasible, TRP),stringsAsFactors = F)
for(i in 4:ncol(Tab1))Tab1[,i]<-as.numeric(Tab1[,i])
colnams<-c("MP","MP type","Feasibility",ind+Current_Year)
names(Tab1)<-colnams
Bdeps<-MSEobj@OM$D/MSEobj@OM$SSBMSY_SSB0 #MSEobj_reb@B_BMSY[,1,1]#
caption=paste0("Starting between ",round(min(Bdeps)*100,0), "% and ", round(max(Bdeps)*100,0), "% BMSY" )
datatable(Tab1,caption=caption) %>%
formatStyle(columns = 4:ncol(Tab1), valueColumns = 4:ncol(Tab1), color = styleInterval(c(50,90),c('red','orange','green')))  %>%
formatStyle(columns=1, valueColumns=3, color = styleEqual(c("","M","D"),c("black","red","red")))%>%
formatStyle(columns=2, valueColumns=3, color = styleEqual(c("","M","D"),c("black","red","red")))%>%
formatStyle(columns=3, valueColumns=3, color = styleEqual(c("","M","D"),c("black","red","red")))
}
Tab_title[[3]] <- Tab_title[[4]] <- Tab_title[[5]] <- Tab_title[[6]] <- Tab_title[[7]] <- Tab_title[[8]] <- Tab_title[[9]] <- "" # make extras empty
# --- Figures ---
Fig_title[[1]]<-""
Fig_title[[2]] <- "Figure 1. Biomass projection relative to the Target and Limit Reference Points"
Fig_text[[2]] <- "Projections of biomass and yield relative to MSY levels. The blue regions represent the 90% and 50% probability intervals,
the white solid line is the median and the dark blue lines are two example simulations.
Grey horizontal lines denote the Target (BMSY) and Limit (50% BMSY) Reference Points."
Figs[[2]]<-function(MSEobj,MSEobj_reb,options=list()) BMSYproj(MSEobj,MSEobj_reb,options,fease=T)
Fig_dim[[2]]<-function(dims)list(height=ceiling(dims$nMPs/5)*250,width=1100)
Fig_title[[3]] <- "Figure 2. Long-term HCR"
Fig_text[[3]] <- "Projections of biomass relative to MSY and unfished (B0) levels given a starting depletion of half BMSY. The rebuilding analysis simulates the fishery currently in a depleted state even if the user-specified depletion in the operating model is higher.
In these cases, the rebuilding analysis provides added assurance whether a particular management procedure would be likely to rebuild the stock if the user-specified depletion level is overly optimistic and in need of rebuilding.
The blue regions represent the 90% and 50% probability intervals, the white solid line is the median and the dark blue lines are two example simulations. Grey horizontal lines denote the limit and target reference points"
Figs[[3]]<-function(MSEobj,MSEobj_reb,options=list()) LT_HCR(MSEobj,MSEobj_reb,options,fease=T)
Fig_dim[[3]]<-function(dims)list(height=ceiling(dims$nMPs/5)*250,width=1100)
Fig_title[[4]] <- "Figure 3. Short-term HCR"
Fig_text[[4]] <- "As Figure 2 but over the first 10 years."
Figs[[4]] <- function(MSEobj,MSEobj_reb,options=list()) ST_HCR(MSEobj,MSEobj_reb,options,fease=T)
Fig_dim[[4]]<-function(dims)list(height=ceiling(dims$nMPs/5)*250,width=1100)
Fig_title[[5]] <- "Figure 4. Evaluation of current uncertainties"
Fig_text[[5]] <- "This figure identifies those questions across which there is the highest variability in long term yield (average yield over last 10 years of the projection). This figures identifies which elements of the questionnaire (Step A) are the most consequential uncertainties."
Figs[[5]] <- function(MSEobj,MSEobj_reb,options=list()) CCU_plot(MSEobj,MSEobj_reb,options,fease=T)
Fig_dim[[5]]<-function(dims)list(height=ceiling(dims$nMPs/3)*350,width=1300)
Fig_title[[6]] <- "Figure 5. Value of information"
Fig_text[[6]] <- "This figure identifies the key observation uncertainties (biases and errors) in determing the long-term yield performance of MPs (average yield over last 10 years of the projection)."
Figs[[6]] <- function(MSEobj,MSEobj_reb,options=list()) VOI_plot(MSEobj,MSEobj_reb,options,fease=T)
Fig_dim[[6]]<-function(dims)list(height=ceiling(dims$nMPs/6)*350,width=1300)
Fig_title[[7]] <- "Figure 6. Yield projection"
Fig_text[[7]] <- "Future yield as a fraction of current yield"
Figs[[7]] <- function(MSEobj,MSEobj_reb,options=list()) Yproj(MSEobj,MSEobj_reb,options,fease=T)
Fig_dim[[7]]<-function(dims)list(height=ceiling(dims$nMPs/5)*350,width=1300)
Fig_title[[8]] <- "Figure 7. Fishing mortality rate projection"
Fig_text[[8]] <- "Future fishing mortality rate relative to FMSY"
Figs[[8]] <- function(MSEobj,MSEobj_reb,options=list()) F_FMSYproj(MSEobj,MSEobj_reb,options,fease=T)
Fig_dim[[8]]<-function(dims)list(height=ceiling(dims$nMPs/5)*350,width=1300)
Fig_title[[9]] <- "Figure 8. Yield - Biomass trade-offs"
Fig_text[[9]] <- "Trade-off between yield and biomass risks"
Figs[[9]] <- function(MSEobj,MSEobj_reb,options=list()) Tplot(MSEobj,MSEobj_reb,options)
Fig_dim[[9]]<-function(dims)list(height=550,width=1100)
Planning<-list(Tabs=Tabs, Figs=Figs, Tab_title=Tab_title, Tab_text=Tab_text, Fig_title=Fig_title,
Fig_text=Fig_text, Fig_dim=Fig_dim, Intro_title=Intro_title, Intro_text=Intro_text, options=options)
# ============= Evaluation =======================
Tabs <- Figs <- Tab_title <- Tab_text <- Fig_title <- Fig_text <- Fig_dim <- options <- Intro_title <- Intro_text <- new('list')
# These are the names of widgets and their values to display in this skin / mode
#             years in projection,  year resolution of reporting  rounding of digits
options<-list(YIU = 5)
Intro_title[[1]] <- "Introduction"
Intro_text[[1]] <- "A single MP is projected to evaluate implied stock status and develop auxiliary indicators."
# --- Tables ---
Tab_title[[1]] <- "Table 1. Biomass relative to 50% BMSY"
Tab_text[[1]] <-"The biomass projection for the interim years that an MP has been in use."
Tabs[[1]]<-function(MSEobj,MSEobj_reb,options=list(burnin=10,res=1),res=5,rnd=1){
nMPs<-MSEobj_reb@nMPs
proyears<-MSEobj_reb@proyears
ind<-1:min(options$YIU,proyears)
LRP<-matrix(round(apply(MSEobj@B_BMSY[,,1:options$YIU,drop=FALSE]>0.5,2:3,mean)*100,rnd)[,ind],nrow=nMPs)
Tab1<-as.data.frame(cbind(MSEobj@MPs,LRP))
colnams<-c("MP",Current_Year-((options$YIU-1):0))
names(Tab1)<-colnams
Bdeps<-MSEobj@OM$D/MSEobj@OM$SSBMSY_SSB0 #MSEobj_reb@B_BMSY[,1,1]#
caption=paste0("Simulations start between ",round(min(Bdeps)*100,0), "% and ", round(max(Bdeps)*100,0), "% BMSY" )
datatable(Tab1,caption=caption,options=list(ordering=F,dom='t'))%>%
formatStyle(columns = 2:ncol(Tab1), valueColumns = 2:ncol(Tab1), color = styleInterval(c(50,100),c('red','orange','green')))
}
Tab_title[[2]] <- "Table 2. Biomass relative to BMSY"
Tab_text[[2]] <-"The biomass projection for the interim years that an MP has been in use."
Tabs[[2]]<-function(MSEobj,MSEobj_reb, options=list(burnin=10,res=1),rnd=1){
nMPs<-MSEobj_reb@nMPs
proyears<-MSEobj_reb@proyears
ind<-1:min(options$YIU,proyears)
TRP<-matrix(round(apply(MSEobj@B_BMSY[,,ind,drop=FALSE]>1,2:3,mean)*100,rnd)[,ind],nrow=nMPs)
Tab2<-as.data.frame(cbind(MSEobj@MPs,TRP))
colnams<-c("MP",Current_Year-((options$YIU-1):0))
names(Tab2)<-colnams
Bdeps<-MSEobj@OM$D/MSEobj@OM$SSBMSY_SSB0 #MSEobj_reb@B_BMSY[,1,1]#
caption=paste0("Simulations start between ",round(min(Bdeps)*100,0), "% and ", round(max(Bdeps)*100,0), "% BMSY" )
datatable(Tab2,caption=caption,options=list(ordering=F,dom='t'))%>%
formatStyle(columns = 2:ncol(Tab2), valueColumns = 2:ncol(Tab2), color = styleInterval(c(25,50,100),c('red','orange','green','darkgreen')))
}
Tab_title[[3]] <- "Table 3. Long term HCR"
Tab_text[[3]] <-"Probability of biomass exceeding the target reference point in the years since MP adoption."
Tabs[[3]]<-function(MSEobj,MSEobj_reb,options=list(burnin=10,res=1),rnd=1){
nMPs<-MSEobj_reb@nMPs
proyears<-MSEobj_reb@proyears
ind<-proyears-(9:0)
TRP<-matrix(round(apply(MSEobj_reb@B_BMSY[,,ind,drop=F]>1,2:3,mean)*100,rnd),nrow=nMPs)
Tab3<-as.data.frame(cbind(MSEobj_reb@MPs,TRP))
colnams<-c("MP",Current_Year+proyears-options$YIU-(9:0))
names(Tab3)<-colnams
Bdeps<-MSEobj_reb@OM$D/MSEobj_reb@OM$SSBMSY_SSB0 #MSEobj_reb@B_BMSY[,1,1]#
caption=paste0("Simulations start between ",round(min(Bdeps)*100,0), "% and ", round(max(Bdeps)*100,0), "% BMSY" )
datatable(Tab3,caption=caption,options=list(ordering=F,dom='t'))%>%
formatStyle(columns = 2:ncol(Tab3), valueColumns = 2:ncol(Tab3), color = styleInterval(c(25,50,100),c('red','orange','green','darkgreen')))
}
Tab_title[[4]] <- "Table 4. Short term HCR"
Tab_text[[4]] <-"Probability of biomass exceeding the target reference point in the years since MP adoption"
Tabs[[4]]<-function(MSEobj, MSEobj_reb,options=list(),rnd=1){
nMPs<-MSEobj_reb@nMPs
proyears<-MSEobj_reb@proyears
MGT2<-2* MSEobj_reb@OM$MGT
ind<-1:20
TRP<-matrix(round(apply(MSEobj_reb@B_BMSY[,,ind,drop=FALSE]>1,2:3,mean)*100,rnd)[,ind],nrow=nMPs)
shaderng=range(ceiling(MGT2))
shaderng[2]<-min(20,shaderng[2])
Tab4<-as.data.frame(cbind(MSEobj_reb@MPs,TRP))
colnams<-c("MP",Current_Year+(1:20)-options$YIU)
names(Tab4)<-colnams
Bdeps<-MSEobj_reb@OM$D/MSEobj_reb@OM$SSBMSY_SSB0 #MSEobj_reb@B_BMSY[,1,1]#
caption=paste0("Simulations start between ",round(min(Bdeps)*100,0), "% and ", round(max(Bdeps)*100,0), "% BMSY" )
datatable(Tab4,caption=caption,options=list(ordering=F,dom='t'))%>%
formatStyle(columns = 2:ncol(Tab4), valueColumns = 2:ncol(Tab4), color = styleInterval(c(25,50,100),c('red','orange','green','darkgreen')))%>%
formatStyle(colnams[1+shaderng[1]:shaderng[2]],backgroundColor='lightgrey')
}
Tab_title[[5]] <- Tab_title[[6]] <- Tab_title[[7]] <- Tab_title[[8]] <- Tab_title[[9]] <- "" # make extras empty
# --- Figures ---
Fig_title[[1]]<-""
Fig_title[[2]] <- "Figure 1. Biomass projected since MP adoption"
Fig_text[[2]] <- "Projections of biomass relative to MSY levels. The blue regions represent the 90% and 50% probability intervals, the white solid line is the median and the dark blue lines are two example simulations. Grey horizontal lines denote the target and limit reference points. The bold black vertical line is the current year."
Figs[[2]]<-function(MSEobj,MSEobj_reb,options=list()) BMSYproj(MSEobj,MSEobj_reb,options,maxcol=1)
Fig_dim[[2]] <- function(dims)list(height=420,width=600)
Fig_title[[3]] <- "Figure 2. Long-term HCR"
Fig_text[[3]] <- "Projections of biomass relative to MSY and unfished (B0) levels given a starting depletion of half BMSY. The rebuilding analysis simulates the fishery currently in a depleted state even if the user-specified depletion in the operating model is higher.
In these cases, the rebuilding analysis provides added assurance whether a particular management procedure would be likely to rebuild the stock if the user-specified depletion level is overly optimistic and in need of rebuilding.
The blue regions represent the 90% and 50% probability intervals, the white solid line is the median and the dark blue lines are two example simulations. Grey horizontal lines denote the limit and target reference points. The bold black vertical line is the current year, the black vertical line denotes the last 10 years of the projection over which results are tabulated."
Figs[[3]]<-function(MSEobj,MSEobj_reb,options=list()) LT_HCR(MSEobj,MSEobj_reb,options,maxcol=1,vline=41)
Fig_dim[[3]] <- function(dims)list(height=420,width=600)
Fig_title[[4]] <- "Figure 3. Short-term HCR"
Fig_text[[4]] <- "As Figure 2 but over a 20 year projection. The shaded grey region is the period between the minimum and maximum values of two mean generation times."
Figs[[4]]<-function(MSEobj,MSEobj_reb,options=list()) ST_HCR(MSEobj,MSEobj_reb,options,plotMGT=T,maxcol=1)
Fig_dim[[4]] <- function(dims)list(height=420,width=600)
Fig_title[[5]] <- "Figure 4. Evaluation of current uncertainties"
Fig_text[[5]] <- "This figure identifies those questions across which there is the highest variability in long term yield (average yield over last 10 years of the projection). This figures identifies which elements of the questionnaire (Step A) are the most consequential uncertainties."
Figs[[5]] <- function(MSEobj,MSEobj_reb,options=list()) CCU_plot(MSEobj,MSEobj_reb,options,maxcol=1)
Fig_dim[[5]]<-function(dims)list(height=420,width=600)
Fig_title[[6]] <- "Figure 5. Value of information"
Fig_text[[6]] <- "This figure identifies the key observation uncertainties (biases and errors) in determing the long-term yield performance of MPs (average yield over last 10 years of the projection)."
Figs[[6]] <- function(MSEobj,MSEobj_reb,options=list()) VOI_plot(MSEobj,MSEobj_reb,options,maxcol=1)
Fig_dim[[6]]<-function(dims)list(height=420,width=600)
Fig_title[[7]] <- Fig_title[[8]] <- Fig_title[[9]] <- "" # make extras empty
Evaluation<-list(Tabs=Tabs, Figs=Figs, Tab_title=Tab_title, Tab_text=Tab_text, Fig_title=Fig_title,
Fig_text=Fig_text, Fig_dim=Fig_dim, Intro_title=Intro_title, Intro_text=Intro_text, options=options)
# ========== Build =============================
MSC<-list(Risk_Assessment=Risk_Assessment,Planning=Planning,Evaluation=Evaluation)
jpeg("C:/temp/testVO2.jpg",height=50,width=10,res=300,units='in')
VOI_plot(MSEobj,MSEobj_reb,options,fease=T)
dev.off()
qcol=rgb(0.4,0.8,0.95)
maxcol=5
lcol= "dodgerblue4"
quants=c(0.05,0.25,0.75,0.95)
fease=F
if(fease){
MPcols=MPcols#FeaseLabs(MSEobj@MPs)$MPcols
}else{
MPcols<-rep('black',MSEobj@nMPs)
}
maxcol=5
MPs<-MSEobj@MPs
nMPs<-length(MPs)
yrs<-Current_Year+(1:MSEobj@proyears)
nc<-maxcol
nr<-ceiling(nMPs/nc)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
Yd<-MSEobj@C/ array(rep(MSEobj@C[,,1],MSEobj@proyears),dim(MSEobj@C))#MSEobj@OM$RefY
Yd[is.na(Yd)]<-0
Ylims<- c(0,min(10,quantile(Yd,0.95)))
for(i in 1:nMPs){
plot(range(yrs),Ylims,col="white")
plotquant(Yd[,i,],p=quants,yrs,qcol,lcol,ablines=1)
mtext(MSEobj@MPs[i],3,line=0.2,font=2,col=MPcols[i])
}
i
Yd[,i,]
maxcol=5
MPs<-MSEobj@MPs
nMPs<-length(MPs)
yrs<-Current_Year+(1:MSEobj@proyears)
nc<-maxcol
nr<-ceiling(nMPs/nc)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
Yd<-MSEobj@C/ array(rep(MSEobj@C[,,1],MSEobj@proyears),dim(MSEobj@C))#MSEobj@OM$RefY
#Yd[is.na(Yd)]<-0
Yd[Yd==Inf]<-NA
Ylims<- c(0,min(10,quantile(Yd,0.95)))
for(i in 1:nMPs){
plot(range(yrs),Ylims,col="white")
plotquant(Yd[,i,],p=quants,yrs,qcol,lcol,ablines=1)
mtext(MSEobj@MPs[i],3,line=0.2,font=2,col=MPcols[i])
}
Yd<-MSEobj@C/ array(rep(MSEobj@C[,,1],MSEobj@proyears),dim(MSEobj@C))#MSEobj@OM$RefY
#Yd[is.na(Yd)]<-0
Yd[Yd==Inf]<-NA
Ylims<- c(0,min(10,quantile(Yd,0.95,na.rm=T)))
for(i in 1:nMPs){
plot(range(yrs),Ylims,col="white")
plotquant(Yd[,i,],p=quants,yrs,qcol,lcol,ablines=1)
mtext(MSEobj@MPs[i],3,line=0.2,font=2,col=MPcols[i])
}
x<-Yd[,i,]
x
ny<-length(yrs)
x[x==Inf]<-NA
qs<-apply(x,2,quantile,p=p[c(1,4)],na.rm=T,type=3)
p=c(0.05,0.25,0.75,0.95)
ny<-length(yrs)
x[x==Inf]<-NA
qs<-apply(x,2,quantile,p=p[c(1,4)],na.rm=T,type=3)
qsi<-apply(x,2,quantile,p=p[2:3],na.rm=T,type=3)
qsi
ny<-length(yrs)
x[x==Inf]<-NA
qs<-apply(x,2,quantile,p=p[c(1,4)],na.rm=T,type=3)
qsi<-apply(x,2,quantile,p=p[2:3],na.rm=T,type=3)
polygon(c(yrs,yrs[ny:1]),c(qs[1,],qs[2,ny:1]),border=NA,col='#b3ecff')
polygon(c(yrs,yrs[ny:1]),c(qsi[1,],qsi[2,ny:1]),border=NA,col=qcol)
if(!is.na(ablines[1]))abline(h=ablines,col='#99999980')
if(addline)for(i in 1:2)lines(yrs,x[i,],col=lcol,lty=i)
ablines=NA
plotquant<-function(x,p=c(0.05,0.25,0.75,0.95),yrs,qcol,lcol,addline=T,ablines=NA){
#plot(range(yrs),Ylims,col="white")
ny<-length(yrs)
x[x==Inf]<-NA
qs<-apply(x,2,quantile,p=p[c(1,4)],na.rm=T,type=3)
qsi<-apply(x,2,quantile,p=p[2:3],na.rm=T,type=3)
polygon(c(yrs,yrs[ny:1]),c(qs[1,],qs[2,ny:1]),border=NA,col='#b3ecff')
polygon(c(yrs,yrs[ny:1]),c(qsi[1,],qsi[2,ny:1]),border=NA,col=qcol)
if(!is.na(ablines[1]))abline(h=ablines,col='#99999980')
if(addline)for(i in 1:2)lines(yrs,x[i,],col=lcol,lty=i)
lines(yrs,apply(x,2,quantile,p=0.5),lwd=2,col="white")
}
if(fease){
MPcols=MPcols#FeaseLabs(MSEobj@MPs)$MPcols
}else{
MPcols<-rep('black',MSEobj@nMPs)
}
maxcol=5
MPs<-MSEobj@MPs
nMPs<-length(MPs)
yrs<-Current_Year+(1:MSEobj@proyears)
nc<-maxcol
nr<-ceiling(nMPs/nc)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
Yd<-MSEobj@C/ array(rep(MSEobj@C[,,1],MSEobj@proyears),dim(MSEobj@C))#MSEobj@OM$RefY
#Yd[is.na(Yd)]<-0
Yd[Yd==Inf]<-NA
Ylims<- c(0,min(10,quantile(Yd,0.95,na.rm=T)))
for(i in 1:nMPs){
plot(range(yrs),Ylims,col="white")
plotquant(Yd[,i,],p=quants,yrs,qcol,lcol,ablines=1)
mtext(MSEobj@MPs[i],3,line=0.2,font=2,col=MPcols[i])
}
i
Yd[,i,]
Yd[Yd==Inf]<-NA
Yd[Yds==NaN]<-NA
Ylims<- c(0,min(10,quantile(Yd,0.95,na.rm=T)))
for(i in 1:nMPs){
plot(range(yrs),Ylims,col="white")
plotquant(Yd[,i,],p=quants,yrs,qcol,lcol,ablines=1)
mtext(MSEobj@MPs[i],3,line=0.2,font=2,col=MPcols[i])
}
i
x<-Yd[,i,]
p=quants
ablines=1
ny<-length(yrs)
x[x==Inf]<-NA
qs<-apply(x,2,quantile,p=p[c(1,4)],na.rm=T,type=3)
qsi<-apply(x,2,quantile,p=p[2:3],na.rm=T,type=3)
polygon(c(yrs,yrs[ny:1]),c(qs[1,],qs[2,ny:1]),border=NA,col='#b3ecff')
polygon(c(yrs,yrs[ny:1]),c(qsi[1,],qsi[2,ny:1]),border=NA,col=qcol)
if(!is.na(ablines[1]))abline(h=ablines,col='#99999980')
if(addline)for(i in 1:2)lines(yrs,x[i,],col=lcol,lty=i)
lines(yrs,apply(x,2,quantile,p=0.5),lwd=2,col="white")
plotquant<-function(x,p=c(0.05,0.25,0.75,0.95),yrs,qcol,lcol,addline=T,ablines=NA){
#plot(range(yrs),Ylims,col="white")
ny<-length(yrs)
x[x==Inf]<-NA
qs<-apply(x,2,quantile,p=p[c(1,4)],na.rm=T,type=3)
qsi<-apply(x,2,quantile,p=p[2:3],na.rm=T,type=3)
polygon(c(yrs,yrs[ny:1]),c(qs[1,],qs[2,ny:1]),border=NA,col='#b3ecff')
polygon(c(yrs,yrs[ny:1]),c(qsi[1,],qsi[2,ny:1]),border=NA,col=qcol)
if(!is.na(ablines[1]))abline(h=ablines,col='#99999980')
if(addline)for(i in 1:2)lines(yrs,x[i,],col=lcol,lty=i)
lines(yrs,apply(x,2,quantile,p=0.5,na.rm=T),lwd=2,col="white")
}
if(fease){
MPcols=MPcols#FeaseLabs(MSEobj@MPs)$MPcols
}else{
MPcols<-rep('black',MSEobj@nMPs)
}
maxcol=5
MPs<-MSEobj@MPs
nMPs<-length(MPs)
yrs<-Current_Year+(1:MSEobj@proyears)
nc<-maxcol
nr<-ceiling(nMPs/nc)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
Yd<-MSEobj@C/ array(rep(MSEobj@C[,,1],MSEobj@proyears),dim(MSEobj@C))#MSEobj@OM$RefY
#Yd[is.na(Yd)]<-0
Yd[Yd==Inf]<-NA
Yd[Yds==NaN]<-NA
Ylims<- c(0,min(10,quantile(Yd,0.95,na.rm=T)))
for(i in 1:nMPs){
plot(range(yrs),Ylims,col="white")
plotquant(Yd[,i,],p=quants,yrs,qcol,lcol,ablines=1)
mtext(MSEobj@MPs[i],3,line=0.2,font=2,col=MPcols[i])
}
mtext("Yield relative to today",2,line=0.7,outer=T)
mtext("Projection Year",1,line=0.7,outer=T)
runApp('C:/GitHub/MERA/inst/shiny_apps/MERA')
devtools::install_github("DLMtool/DLMtool")#,ref="develop")
shiny::runApp('inst/shiny_apps/MERA')
runApp('inst/shiny_apps/MERA')
exists(OM)
exists('OM')
runApp('inst/shiny_apps/MERA')
runApp('inst/shiny_apps/MERA')
test<-runMSE(OM)
OM@nsim
runApp('inst/shiny_apps/MERA')
library(rsconnect)
## Run this once to link to account
rsconnect::setAccountInfo(name='msc-dlmtool', token='F3598BCF837DEB55DB6AC8F712D9EC67', secret='bNM+5C9PqDle8Ovjkun9/9UX5PyKH4qL/DKiikBk')
## Note: make sure you have CRAN version of DLMtool and MSEtool
##       installed on local machine before deploying (dunno why!)
# options(repos = c("MyRepo"="http://packages.example.com", "CRAN"="https://cran.rstudio.org"))
# lapply(dir(.libPaths()), install.packages)
devtools::install_github("DLMtool/DLMtool")#,ref="develop")
devtools::install_github("tcarruth/MSEtool")
setwd("C:/Users/tcarruth/Documents/GitHub/MERA")
setwd("C:/GitHub/MERA")
deployApp('inst/shiny_apps/MERA',appName="mera")
shiny::runApp('inst/shiny_apps/MERA')
