list('copy', list(
extend = 'collection',
buttons = c('csv', 'excel', 'pdf'),
text = 'Download'
)),
dom = 'Brti')
)
names(Status)
names(Status$Est)
Status$Est
names(Status$Sim)
names(Status$Fit)
Status
length(Status$Fit)
names(Status$Fit)
Status$Fit[[1]]
names(Status$Fit[[1]])
Status$Fit[[1]][[1]]
slotNames(Status$Fit[[1]])
keep<-unlist(lapply(Status$Est,length))>2
keep
Status$Fit[[1]]@SSB
slotNames(Status$Fit[[1]])
Status$Fit[[1]]@Misc
names(Status$Fit[[1]]@Misc)
slotNames(Status$Fit[[1]]@Misc)
length(Status$Fit[[1]]@Misc)
Status$Fit[[1]]@Misc[[1]]
names(Status$Fit[[1]]@Misc[[1]])
names(Status$Fit[[1]]@Misc[[2]])
names(Status$Fit[[1]]@Misc[[3]])
names(Status$Fit[[1]]@Misc[[4]])
length(Status$Fit[[1]]@Misc)
slotNames(Status$Fit[[1]])
lapply(Status$Fit[[1]]@Misc,function(x)x$R0)
Status$Fit[[1]]@SSB
lapply(Status$Fit[[1]]@Misc,function(x)x$E0)
lapply(Status$Fit[[1]]@Misc,function(x)x$log_R0)
slotNames(Status$Fit[[1]])
Names(Status$Fit[[1]]@Misc)
names(Status$Fit[[1]]@Misc)
names(Status$Fit[[1]]@Misc[[1]])
lapply(Status$Fit[[1]]@Misc,function(x)x$R_eq)
names(Status$Fit[[1]]@Misc[[1]]$M)
Status$Fit[[1]]@Misc[[1]]$M
Status$Fit@OM$nyears
Status$Fit@OM@nyears
Status$Fit$OM@nyears
Status$Fit[[1]]@OM@nyears
Status$Fit[[1]]@OM@maxage
Status$Fit[[1]]@Misc[[1]]$B0
Status$Fit[[1]]@SSB
getquants<-function(x)  apply(x@SSB/x@SSB[,1],2,c(0.05,0.1,0.5,0.9,0.95))
lapply(Status$Fit,getquants)
etquants<-function(x)  apply(x@SSB/x@SSB[,1],2,quantile,p=c(0.05,0.1,0.5,0.9,0.95))
lapply(Status$Fit,getquants)
x<-Status$Fit[[1]]
x@SSB/x@SSB[,1]
apply(x@SSB/x@SSB[,1],2,quantile,p=c(0.05,0.1,0.5,0.9,0.95))
getquants<-function(x)  apply(x@SSB/x@SSB[,1],2,quantile,p=c(0.05,0.1,0.5,0.9,0.95))
lapply(Status$Fit,getquants)
meds<-lapply(Dqs,function(x)x[3,])
Dqs<-lapply(Status$Fit,getquants)
meds<-lapply(Dqs,function(x)x[3,])
meds
Dqs<-lapply(Status$Fit,getquants)
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),byrow=T,nrow=nmods)
nmods<-length(Status$Fit)
nplots<-nmods+1 # add the overall mean plot
ncol<-nplots
keep<-unlist(lapply(Status$Est,length))>3 # keep estimates from one of the methods of estimation
getquants<-function(x)  apply(x@SSB/x@SSB[,1],2,quantile,p=c(0.05,0.1,0.5,0.9,0.95))
Dqs<-lapply(Status$Fit,getquants)
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),byrow=T,nrow=nmods)
meds
matplot(meds)
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),ncol=nmods)
matplot(meds,type='l')
maxcol=5
nrow<-ceiling(nplots/maxcol)
nmods<-length(Status$Fit)
nplots<-nmods+1 # add the overall mean plot
nc<-maxcol
nr<-ceiling(nplots/nc)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
matplot(meds,type='l')
cols<-c('darkgrey','lightgrey',rainbow(nEst-1))
matplot(meds,type='l',col=cols)
legend('topright',legend=Status$codes[keep],text.col=cols,bty='n',cex=0.9)
mtext("Median trend, all methods",3,line=0.2,font=2)
names(Status$Fit[[1]]@Misc)
slotNames(Status$Fit[[1]]@Misc)
names(Status$Fit[[1]]@Misc[[1]])
Status$Fit[[1]]@Misc[[1]]$C_hist
Status$Fit[[1]]@Misc[[1]]$E_hist
matplot(meds,type='l',col=cols,yaxn='int')
matplot(meds,type='l',col=cols,yaxs='i')
ny<-nrow(meds)
ny
plot(c(0,ny),c(0,1),col="white")
matplot(meds,type='l',col=cols,yaxs='i',add=T)
plot(c(0,ny),c(0,1),col="white",yaxs='i')
matplot(meds,type='l',col=cols,add=T)
plot(c(0,ny),c(0,1),col="white",yaxs='i')
abline(h=seq(0,1,length.out=11),col="light grey")
matplot(meds,type='l',col=cols,add=T)
plot(c(0,ny),c(0,1),col="white",yaxs='i')
abline(h=seq(0.1,1,length.out=10),col="light grey")
matplot(meds,type='l',col=cols,add=T)
legend('topright',legend=Status$codes[keep],text.col=cols,bty='n',cex=0.9)
legend('topright',legend=Status$codes[keep],text.col=cols,cex=0.9)
mtext("Median trend, all methods",3,line=0.2,font=2)
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
matplot(meds,type='l',col=cols,add=T)
legend('topright',legend=Status$codes[keep],text.col=cols,bty='n',cex=0.9)
mtext("Median trend, all methods",3,line=0.2,font=2)
mat<-Dqs[[1]]
mat
xlab=1:ny
?polygon
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[1,],mat[5,ncol(mat):1]),col='light grey',border="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[2,ncol(mat):1]),col=' grey',border=" grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[4,ncol(mat):1]),col=' grey',border=" grey")
keep<-unlist(lapply(Status$Est,length))>3 # keep estimates from one of the methods of estimation
getquants<-function(x)  apply(x@SSB/x@SSB[,1],2,quantile,p=c(0.05,0.25,0.5,0.75,0.95))
Dqs<-lapply(Status$Fit,getquants)
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),ncol=nmods)
ny<-nrow(meds)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
matplot(meds,type='l',col=cols,add=T)
legend('topright',legend=Status$codes[keep],text.col=cols,bty='n',cex=0.9)
mtext("Median trend, all methods",3,line=0.2,font=2)
mat<-Dqs[[1]]
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[1,],mat[5,ncol(mat):1]),col='light grey',border="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[4,ncol(mat):1]),col=' grey',border=" grey")
qplot<-function(mat,xlab=1:ny){
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[1,],mat[5,ncol(mat):1]),col='light grey',border="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[4,ncol(mat):1]),col=' grey',border=" grey")
lines(xlab,mat[3,],col='black')
}
keep<-unlist(lapply(Status$Est,length))>3 # keep estimates from one of the methods of estimation
keep
keep<-unlist(lapply(Status$Est,length))>3 # keep estimates from one of the methods of estimation
nmods<-sum(Keep)
keep<-unlist(lapply(Status$Est,length))>3 # keep estimates from one of the methods of estimation
nmods<-sum(keep)
nmods
ntot<-length(Status$Fit)
ntot<-length(Status$Fit)
ntot
ntot<-length(Status$Fit)
keep<-unlist(lapply(Status$Est,length))>3 # keep estimates from one of the methods of estimation
nmods<-sum(keep)
keep_inid<-(1:ntot)[keep]
nplots<-nmods+1 # add the overall mean plot
cols<-c('darkgrey','lightgrey',rainbow(nEst-1))
nc<-maxcol
nr<-ceiling(nplots/nc)
getquants<-function(x)  apply(x@SSB/x@SSB[,1],2,quantile,p=c(0.05,0.25,0.5,0.75,0.95))
Dqs<-lapply(Status$Fit,getquants)
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),ncol=nmods)
ny<-nrow(meds)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
matplot(meds,type='l',col=cols,add=T)
legend('topright',legend=Status$codes[keep],text.col=cols,bty='n',cex=0.9)
mtext("Median trend, all methods",3,line=0.2,font=2)
qplot<-function(mat,xlab=1:ny,main=""){
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[1,],mat[5,ncol(mat):1]),col='light grey',border="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[4,ncol(mat):1]),col=' grey',border=" grey")
lines(xlab,mat[3,],col='black')
mtext(Main,3,line=0.2,font=2)
}
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),ncol=nmods)
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),ncol=nmods)[,keep]
ny<-nrow(meds)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
meds
qplot<-function(mat,xlab=1:ny,main=""){
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[1,],mat[5,ncol(mat):1]),col='light grey',border="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[4,ncol(mat):1]),col=' grey',border=" grey")
lines(xlab,mat[3,],col='black')
mtext(Main,3,line=0.2,font=2)
}
for(i in keep_ind){
qplot(Dqs[[i]],xlab=1:ny,main=Status$codes[[i]])
}
ntot<-length(Status$Fit)
keep<-unlist(lapply(Status$Est,length))>3 # keep estimates from one of the methods of estimation
nmods<-sum(keep)
keep_inid<-(1:ntot)[keep]
nplots<-nmods+1 # add the overall mean plot
cols<-c('darkgrey','lightgrey',rainbow(nEst-1))
nc<-maxcol
nr<-ceiling(nplots/nc)
getquants<-function(x)  apply(x@SSB/x@SSB[,1],2,quantile,p=c(0.05,0.25,0.5,0.75,0.95))
Dqs<-lapply(Status$Fit,getquants)
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),ncol=nmods)[,keep]
ny<-nrow(meds)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
matplot(meds,type='l',col=cols,add=T)
legend('topright',legend=Status$codes[keep],text.col=cols,bty='n',cex=0.9)
mtext("Median trend, all methods",3,line=0.2,font=2)
qplot<-function(mat,xlab=1:ny,main=""){
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[1,],mat[5,ncol(mat):1]),col='light grey',border="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[4,ncol(mat):1]),col=' grey',border=" grey")
lines(xlab,mat[3,],col='black')
mtext(Main,3,line=0.2,font=2)
}
for(i in keep_ind){
qplot(Dqs[[i]],xlab=1:ny,main=Status$codes[[i]])
}
ntot<-length(Status$Fit)
keep<-unlist(lapply(Status$Est,length))>3 # keep estimates from one of the methods of estimation
nmods<-sum(keep)
keep_ind<-(1:ntot)[keep]
nplots<-nmods+1 # add the overall mean plot
cols<-c('darkgrey','lightgrey',rainbow(nEst-1))
nc<-maxcol
nr<-ceiling(nplots/nc)
getquants<-function(x)  apply(x@SSB/x@SSB[,1],2,quantile,p=c(0.05,0.25,0.5,0.75,0.95))
Dqs<-lapply(Status$Fit,getquants)
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),ncol=nmods)[,keep]
ny<-nrow(meds)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
matplot(meds,type='l',col=cols,add=T)
legend('topright',legend=Status$codes[keep],text.col=cols,bty='n',cex=0.9)
mtext("Median trend, all methods",3,line=0.2,font=2)
qplot<-function(mat,xlab=1:ny,main=""){
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[1,],mat[5,ncol(mat):1]),col='light grey',border="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[4,ncol(mat):1]),col=' grey',border=" grey")
lines(xlab,mat[3,],col='black')
mtext(Main,3,line=0.2,font=2)
}
for(i in keep_ind){
qplot(Dqs[[i]],xlab=1:ny,main=Status$codes[[i]])
}
qplot<-function(mat,xlab=1:ny,main=""){
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[1,],mat[5,ncol(mat):1]),col='light grey',border="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[4,ncol(mat):1]),col=' grey',border=" grey")
lines(xlab,mat[3,],col='black')
mtext(main,3,line=0.2,font=2)
}
for(i in keep_ind){
qplot(Dqs[[i]],xlab=1:ny,main=Status$codes[[i]])
}
ntot<-length(Status$Fit)
keep<-unlist(lapply(Status$Est,length))>3 # keep estimates from one of the methods of estimation
nmods<-sum(keep)
keep_ind<-(1:ntot)[keep]
nplots<-nmods+1 # add the overall mean plot
cols<-c('darkgrey','lightgrey',rainbow(nEst-1))
nc<-maxcol
nr<-ceiling(nplots/nc)
getquants<-function(x)  apply(x@SSB/x@SSB[,1],2,quantile,p=c(0.05,0.25,0.5,0.75,0.95))
Dqs<-lapply(Status$Fit,getquants)
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),ncol=nmods)[,keep]
ny<-nrow(meds)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
nr
nc
nmods
nplots
nc
ceiling(nplots/nc)
maxcol
ntot<-length(Status$Fit)
keep<-unlist(lapply(Status$Est,length))>3 # keep estimates from one of the methods of estimation
nmods<-sum(keep)
keep_ind<-(1:ntot)[keep]
nplots<-nmods+1 # add the overall mean plot
cols<-c('darkgrey','lightgrey',rainbow(nEst-1))
nc<-maxcol
nr<-ceiling(nplots/nc)
getquants<-function(x)  apply(x@SSB/x@SSB[,1],2,quantile,p=c(0.05,0.25,0.5,0.75,0.95))
Dqs<-lapply(Status$Fit,getquants)
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),ncol=nmods)[,keep]
ny<-nrow(meds)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
matplot(meds,type='l',col=cols,add=T)
legend('topright',legend=Status$codes[keep],text.col=cols,bty='n',cex=0.9)
mtext("Median trend, all methods",3,line=0.2,font=2)
qplot<-function(mat,xlab=1:ny,main=""){
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[1,],mat[5,ncol(mat):1]),col='light grey',border="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[4,ncol(mat):1]),col=' grey',border=" grey")
lines(xlab,mat[3,],col='black')
mtext(main,3,line=0.2,font=2)
}
keep_ind
for(i in keep_ind){
qplot(Dqs[[i]],xlab=1:ny,main=Status$codes[[i]])
}
qplot<-function(mat,xlab=1:ny,main=""){
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[1,],mat[5,ncol(mat):1]),col='light grey',border="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[4,ncol(mat):1]),col='dark grey',border="dark grey")
lines(xlab,mat[3,],col='black')
mtext(main,3,line=0.2,font=2)
}
for(i in keep_ind){
qplot(Dqs[[i]],xlab=1:ny,main=Status$codes[[i]])
}
slotNames(x)
x@Misc[[1]]@E
x@Misc[[1]]$E
x@Misc[[1]]$E0
y<-x@Misc[[1]]
y$E
lapply(x@Misc,function(y),y$E)
lapply(x@Misc,function(y)y$E)
sapply(1:length(x@Misc),x@Misc,function(X)X$E)
x@Misc
sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E),listy=x@Misc)
sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E,listy=x@Misc)
listy=x@Misc
X<-1
listy[[X]]$E
length(x@Misc)
sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E,listy=x@Misc)
sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E0,listy=x@Misc)
t(sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E,listy=x@Misc) / # nyears x nsim
sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E0,listy=x@Misc))
sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E,listy=x@Misc) / # nyears x nsim
sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E0,listy=x@Misc)
sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E,listy=x@Misc)
sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E0,listy=x@Misc)
sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E,listy=x@Misc) / # nyears x nsim
sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E0,listy=x@Misc)
sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E,listy=x@Misc)
dim(sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E,listy=x@Misc))
dim(sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E0,listy=x@Misc))
t(sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E[1:(length(listy[[X]]$E)-1)],listy=x@Misc)
/ sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E0,listy=x@Misc))
procdeps_inst<-function(x){
t(sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E[1:(length(listy[[X]]$E)-1)],listy=x@Misc)
/ sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E0,listy=x@Misc))
}
deps<-lapply(Status$Fit,procdeps)
procdeps_inst<-function(x){
t(sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E[1:(length(listy[[X]]$E)-1)],listy=x@Misc)
/ sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E0,listy=x@Misc))
}
deps<-lapply(Status$Fit,procdeps_inst)
deps
length(deps)
deps<-lapply(Status$Fit,procdeps_inst) # ntot matrices of depletion (nsim x nyears)
getquants<-function(x)  apply(x,2,quantile,p=c(0.05,0.25,0.5,0.75,0.95))
Dqs<-lapply(deps,getquants)
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),ncol=nmods)[,keep]
meds
ny<-nrow(meds)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
matplot(meds,type='l',col=cols,add=T)
legend('topright',legend=Status$codes[keep],text.col=cols,bty='n',cex=0.9)
mtext("Median trend, all methods",3,line=0.2,font=2)
qplot<-function(mat,xlab=1:ny,main=""){
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[1,],mat[5,ncol(mat):1]),col='light grey',border="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[4,ncol(mat):1]),col='dark grey',border="dark grey")
lines(xlab,mat[3,],col='black')
mtext(main,3,line=0.2,font=2)
}
Dqs
getquants<-function(x)  apply(x,2,quantile,p=c(0.05,0.25,0.5,0.75,0.95))
Dqs<-lapply(deps,getquants)
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),ncol=nmods)[,keep]
ny<-nrow(meds)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
matplot(meds,type='l',col=cols,add=T)
legend('topright',legend=Status$codes[keep],text.col=cols,bty='n',cex=0.9)
mtext("Median trend, all methods",3,line=0.2,font=2)
qplot<-function(mat,xlab=1:ny,main=""){
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[1,],mat[5,ncol(mat):1]),col='light grey',border="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[4,ncol(mat):1]),col='dark grey',border="dark grey")
lines(xlab,mat[3,],col='black')
mtext(main,3,line=0.2,font=2)
}
for(i in keep_ind){
qplot(Dqs[[i]],xlab=1:ny,main=Status$codes[[i]])
}
procdeps<-function(x){
t(sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E[1:(length(listy[[X]]$E)-1)],listy=x@Misc)
/ sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E0[,1],listy=x@Misc))
}
deps<-lapply(Status$Fit,procdeps) # ntot matrices of depletion (nsim x nyears)
x@Misc[[1]]$E0
procdeps<-function(x){
t(sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E[1:(length(listy[[X]]$E)-1)],listy=x@Misc)
/ sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E0[1],listy=x@Misc))
}
deps<-lapply(Status$Fit,procdeps) # ntot matrices of depletion (nsim x nyears)
getquants<-function(x)  apply(x,2,quantile,p=c(0.05,0.25,0.5,0.75,0.95))
Dqs<-lapply(deps,getquants)
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),ncol=nmods)[,keep]
ny<-nrow(meds)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
matplot(meds,type='l',col=cols,add=T)
legend('topright',legend=Status$codes[keep],text.col=cols,bty='n',cex=0.9)
mtext("Median trend, all methods",3,line=0.2,font=2)
qplot<-function(mat,xlab=1:ny,main=""){
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[1,],mat[5,ncol(mat):1]),col='light grey',border="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[4,ncol(mat):1]),col='dark grey',border="dark grey")
lines(xlab,mat[3,],col='black')
mtext(main,3,line=0.2,font=2)
}
for(i in keep_ind){
qplot(Dqs[[i]],xlab=1:ny,main=Status$codes[[i]])
}
procdeps<-function(x){
t(sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E[1:(length(listy[[X]]$E)-1)],listy=x@Misc))
/ sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E0[1],listy=x@Misc)
}
deps<-lapply(Status$Fit,procdeps) # ntot matrices of depletion (nsim x nyears)
getquants<-function(x)  apply(x,2,quantile,p=c(0.05,0.25,0.5,0.75,0.95))
Dqs<-lapply(deps,getquants)
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),ncol=nmods)[,keep]
ny<-nrow(meds)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
matplot(meds,type='l',col=cols,add=T)
legend('topright',legend=Status$codes[keep],text.col=cols,bty='n',cex=0.9)
mtext("Median trend, all methods",3,line=0.2,font=2)
qplot<-function(mat,xlab=1:ny,main=""){
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[1,],mat[5,ncol(mat):1]),col='light grey',border="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[4,ncol(mat):1]),col='dark grey',border="dark grey")
lines(xlab,mat[3,],col='black')
mtext(main,3,line=0.2,font=2)
}
for(i in keep_ind){
qplot(Dqs[[i]],xlab=1:ny,main=Status$codes[[i]])
}
t(sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E[1:(length(listy[[X]]$E)-1)],listy=x@Misc))
sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E0[1],listy=x@Misc)
t(sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E[1:(length(listy[[X]]$E)-1)],listy=x@Misc))
/ sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E0[1],listy=x@Misc)
procdeps<-function(x){
t(sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E[1:(length(listy[[X]]$E)-1)],listy=x@Misc))/
sapply(1:length(x@Misc),function(X,listy)listy[[X]]$E0[1],listy=x@Misc)
}
deps<-lapply(Status$Fit,procdeps) # ntot matrices of depletion (nsim x nyears)
getquants<-function(x)  apply(x,2,quantile,p=c(0.05,0.25,0.5,0.75,0.95))
Dqs<-lapply(deps,getquants)
meds<-matrix(unlist(lapply(Dqs,function(x)x[3,])),ncol=nmods)[,keep]
ny<-nrow(meds)
par(mfrow=c(nr,nc),mai=c(0.3,0.3,0.2,0.01),omi=c(0.5,0.5,0.05,0.05))
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
matplot(meds,type='l',col=cols,add=T)
legend('topright',legend=Status$codes[keep],text.col=cols,bty='n',cex=0.9)
mtext("Median trend, all methods",3,line=0.2,font=2)
qplot<-function(mat,xlab=1:ny,main=""){
plot(c(0,ny),c(0,1),col="white",yaxs='i',ylab="",xlab="")
abline(h=seq(0.1,1,length.out=10),col="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[1,],mat[5,ncol(mat):1]),col='light grey',border="light grey")
polygon(c(xlab,xlab[length(xlab):1]),c(mat[2,],mat[4,ncol(mat):1]),col='dark grey',border="dark grey")
lines(xlab,mat[3,],col='black')
mtext(main,3,line=0.2,font=2)
}
for(i in keep_ind){
qplot(Dqs[[i]],xlab=1:ny,main=Status$codes[[i]])
}
Status$Fit[[1]]@OM@CurrentYr
Status$Fit[[1]]@data
Status$Fit[[1]]@data@Year
shiny::runApp('inst/shiny_apps/MERA')
Status<-readRDS("C:/temp/Status.rda")
Status$Year
names(Status)
runApp('inst/shiny_apps/MERA')
